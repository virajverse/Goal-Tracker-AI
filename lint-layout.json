[{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\src\\react-app\\components\\Layout.tsx","messages":[{"ruleId":"@typescript-eslint/no-unnecessary-condition","severity":2,"message":"Unnecessary conditional, expected left-hand side of `??` operator to be possibly null or undefined.","line":228,"column":23,"nodeType":"LogicalExpression","messageId":"neverNullish","endLine":228,"endColumn":67},{"ruleId":"@typescript-eslint/no-unnecessary-condition","severity":2,"message":"Unnecessary conditional, expected left-hand side of `??` operator to be possibly null or undefined.","line":228,"column":23,"nodeType":"CallExpression","messageId":"neverNullish","endLine":228,"endColumn":42}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport {\n  Target,\n  Calendar,\n  BarChart3,\n  MessageSquare,\n  LogOut,\n  BookOpen,\n  Folder,\n  Menu,\n  X,\n  User,\n  ChevronDown,\n} from \"lucide-react\";\nimport { useAuth } from \"@/react-app/hooks/useCustomAuth\";\nimport LoginModal from \"./LoginModal\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps): React.ReactElement {\n  const pathname = usePathname();\n  const { user, logout, isLoading } = useAuth();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [isHelpMenuOpen, setIsHelpMenuOpen] = useState(false);\n  const [isMobileHelpOpen, setIsMobileHelpOpen] = useState(false);\n  const isLanding = pathname === \"/\";\n  const isAdminRoutes =\n    pathname.startsWith(\"/admin\") || pathname.startsWith(\"/agent\");\n\n  // Close mobile menu when route changes\n  useEffect(() => {\n    setIsMobileMenuOpen(false);\n    setIsProfileMenuOpen(false);\n    setIsHelpMenuOpen(false);\n    setIsMobileHelpOpen(false);\n  }, [pathname]);\n\n  // Prevent body scroll when mobile menu is open\n  useEffect(() => {\n    if (isMobileMenuOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isMobileMenuOpen]);\n\n  // Close dropdowns on outside click\n  useEffect(() => {\n    const onDocClick = (e: MouseEvent): void => {\n      const profileMenu = document.getElementById(\"header-profile-dropdown\");\n      const helpMenu = document.getElementById(\"header-help-dropdown\");\n      const target = e.target as Node;\n      if (profileMenu && !profileMenu.contains(target))\n        setIsProfileMenuOpen(false);\n      if (helpMenu && !helpMenu.contains(target)) setIsHelpMenuOpen(false);\n    };\n    document.addEventListener(\"mousedown\", onDocClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", onDocClick);\n    };\n  }, []);\n\n  const navigation = [\n    { name: \"Dashboard\", href: \"/dashboard\", icon: BarChart3 },\n    { name: \"Today\", href: \"/daily\", icon: Calendar },\n    { name: \"Goals\", href: \"/goals\", icon: Target },\n    { name: \"Projects\", href: \"/projects\", icon: Folder },\n    { name: \"Questions\", href: \"/questions\", icon: MessageSquare },\n    { name: \"FAQ\", href: \"/faq\", icon: BookOpen },\n    { name: \"AI Chat\", href: \"/chat\", icon: MessageSquare },\n  ];\n\n  if (!isLanding && isLoading) {\n    return (\n      <div className=\"min-h-screen bg-purple-950 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-purple-400 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-white text-lg\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Note: unauthenticated users can browse; actions will prompt login via modal\n\n  // Admin and Agent routes render with their own chrome (no marketing header)\n  if (isAdminRoutes) {\n    return (\n      <div className=\"min-h-screen bg-purple-950 text-white\">{children}</div>\n    );\n  }\n\n  // For the landing page, render children without the purple header or app chrome\n  if (isLanding) {\n    return (\n      <div className=\"min-h-screen bg-purple-950 text-white\">{children}</div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-[100svh] flex flex-col\">\n      {/* Header */}\n      <header className=\"bg-purple-950/60 backdrop-blur-sm border-b border-purple-900 fixed w-full z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16 items-center\">\n            <div className=\"flex items-center\">\n              <button\n                onClick={() => {\n                  setIsMobileMenuOpen((prev) => !prev);\n                }}\n                className=\"md:hidden text-gray-300 hover:text-white mr-2\"\n                aria-label=\"Toggle menu\"\n              >\n                {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n              </button>\n              <Link href=\"/\" className=\"flex items-center space-x-2\">\n                <span className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n                  GoalTracker AI\n                </span>\n              </Link>\n            </div>\n\n            <div className=\"flex items-center gap-6\">\n              {/* Navigation */}\n              {/* Desktop Navigation */}\n              <nav className=\"hidden md:flex items-center space-x-8\">\n                {navigation\n                  .filter(\n                    (item) =>\n                      ![\"Questions\", \"FAQ\", \"AI Chat\"].includes(item.name),\n                  )\n                  .map((item) => (\n                    <Link\n                      key={item.name}\n                      href={item.href}\n                      className={`${\n                        pathname === item.href\n                          ? \"text-white border-b-2 border-purple-400\"\n                          : \"text-gray-300 hover:text-white hover:border-b-2 hover:border-purple-400/50\"\n                      } px-3 py-2 text-sm font-medium transition-colors duration-200`}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                {/* Help Center Dropdown */}\n                <div id=\"header-help-dropdown\" className=\"relative\">\n                  {(() => {\n                    const helpActive =\n                      pathname.startsWith(\"/questions\") ||\n                      pathname.startsWith(\"/faq\") ||\n                      pathname.startsWith(\"/chat\");\n                    return (\n                      <button\n                        onClick={() => {\n                          setIsHelpMenuOpen((v) => !v);\n                        }}\n                        className={`${helpActive ? \"text-white border-b-2 border-purple-400\" : \"text-gray-300 hover:text-white hover:border-b-2 hover:border-purple-400/50\"} px-3 py-2 text-sm font-medium inline-flex items-center gap-1`}\n                        aria-haspopup=\"menu\"\n                        aria-expanded={isHelpMenuOpen}\n                        title=\"Help Center\"\n                      >\n                        Help Center{\" \"}\n                        <ChevronDown\n                          size={16}\n                          className={`transition-transform ${isHelpMenuOpen ? \"rotate-180\" : \"\"}`}\n                        />\n                      </button>\n                    );\n                  })()}\n                  {isHelpMenuOpen && (\n                    <div className=\"absolute left-0 mt-2 w-56 bg-purple-950/90 border border-purple-900 rounded-lg shadow-xl backdrop-blur-sm overflow-hidden\">\n                      <Link\n                        href=\"/questions\"\n                        onClick={() => {\n                          setIsHelpMenuOpen(false);\n                        }}\n                        className=\"block px-3 py-2 text-sm text-gray-200 hover:bg-white/10\"\n                      >\n                        Questions\n                      </Link>\n                      <Link\n                        href=\"/faq\"\n                        onClick={() => {\n                          setIsHelpMenuOpen(false);\n                        }}\n                        className=\"block px-3 py-2 text-sm text-gray-200 hover:bg-white/10\"\n                      >\n                        FAQ\n                      </Link>\n                      <Link\n                        href=\"/chat\"\n                        onClick={() => {\n                          setIsHelpMenuOpen(false);\n                        }}\n                        className=\"block px-3 py-2 text-sm text-gray-200 hover:bg-white/10\"\n                      >\n                        AI Chat\n                      </Link>\n                    </div>\n                  )}\n                </div>\n              </nav>\n              {/* Desktop Profile Dropdown */}\n              {user ? (\n                <div\n                  id=\"header-profile-dropdown\"\n                  className=\"relative hidden md:block\"\n                >\n                  <button\n                    onClick={() => {\n                      setIsProfileMenuOpen((v) => !v);\n                    }}\n                    className=\"w-9 h-9 rounded-full bg-purple-500 text-white font-medium grid place-items-center hover:opacity-90\"\n                    aria-haspopup=\"menu\"\n                    title=\"Account\"\n                  >\n                    {(user.name.charAt(0) ?? user.email?.charAt(0) ?? \"U\").toUpperCase()}\n                  </button>\n                  {isProfileMenuOpen && (\n                    <div className=\"absolute right-0 mt-2 w-44 bg-purple-950/90 border border-purple-900 rounded-lg shadow-xl backdrop-blur-sm overflow-hidden\">\n                      <Link\n                        href=\"/profile\"\n                        className={`block px-3 py-2 text-sm text-gray-200 hover:bg-white/10`}\n                        onClick={() => {\n                          setIsProfileMenuOpen(false);\n                        }}\n                      >\n                        Profile\n                      </Link>\n                      <button\n                        onClick={() => {\n                          setIsProfileMenuOpen(false);\n                          void logout();\n                        }}\n                        className=\"w-full text-left px-3 py-2 text-sm text-red-300 hover:bg-white/10\"\n                      >\n                        Logout\n                      </button>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <button\n                  onClick={() => {\n                    setShowLoginModal(true);\n                  }}\n                  className=\"hidden md:flex px-3 py-1.5 bg-white/10 hover:bg-white/20 text-white rounded-lg text-sm\"\n                >\n                  Sign In\n                </button>\n              )}\n\n              {/* Mobile Navigation moved below header */}\n            </div>\n          </div>\n        </div>\n      </header>\n      {isMobileMenuOpen && (\n        <div className=\"md:hidden fixed inset-0 z-[60] bg-purple-950/90 backdrop-blur-sm\">\n          <button\n            onClick={() => {\n              setIsMobileMenuOpen(false);\n            }}\n            className=\"absolute top-4 right-4 p-2 rounded-full bg-purple-900 text-gray-200 hover:bg-purple-800\"\n            aria-label=\"Close menu\"\n          >\n            <X size={20} />\n          </button>\n          <div className=\"pt-16 px-4\">\n            <nav className=\"flex flex-col space-y-2\">\n              {navigation\n                .filter(\n                  (item) =>\n                    ![\"Questions\", \"FAQ\", \"AI Chat\"].includes(item.name),\n                )\n                .map((item) => {\n                  const Icon = item.icon;\n                  return (\n                    <Link\n                      key={item.name}\n                      href={item.href}\n                      className={`${\n                        pathname === item.href\n                          ? \"bg-purple-900 text-white\"\n                          : \"text-gray-300 hover:bg-purple-900 hover:text-white\"\n                      } px-4 py-3 rounded-lg flex items-center space-x-3 text-base font-medium transition-colors duration-200`}\n                      onClick={() => {\n                        setIsMobileMenuOpen(false);\n                      }}\n                    >\n                      <Icon size={20} className=\"flex-shrink-0\" />\n                      <span>{item.name}</span>\n                    </Link>\n                  );\n                })}\n\n              {/* Mobile Help Center Dropdown */}\n              <button\n                onClick={() => {\n                  setIsMobileHelpOpen((s) => !s);\n                }}\n                className={`px-4 py-3 rounded-lg flex items-center justify-between text-base font-medium transition-colors duration-200 ${\n                  pathname.startsWith(\"/questions\") ||\n                  pathname.startsWith(\"/faq\") ||\n                  pathname.startsWith(\"/chat\")\n                    ? \"bg-purple-900 text-white\"\n                    : \"text-gray-300 hover:bg-purple-900 hover:text-white\"\n                }`}\n                aria-haspopup=\"menu\"\n                aria-expanded={isMobileHelpOpen}\n                title=\"Help Center\"\n              >\n                <span className=\"flex items-center gap-3\">\n                  <BookOpen size={20} className=\"flex-shrink-0\" /> Help Center\n                </span>\n                <ChevronDown\n                  size={18}\n                  className={`transition-transform ${isMobileHelpOpen ? \"rotate-180\" : \"\"}`}\n                />\n              </button>\n              {isMobileHelpOpen && (\n                <div className=\"ml-9 flex flex-col space-y-2\">\n                  <Link\n                    href=\"/questions\"\n                    className={`${pathname === \"/questions\" ? \"bg-purple-900 text-white\" : \"text-gray-300 hover:bg-purple-900 hover:text-white\"} px-4 py-2 rounded-lg text-sm transition-colors`}\n                    onClick={() => {\n                      setIsMobileMenuOpen(false);\n                    }}\n                  >\n                    Questions\n                  </Link>\n                  <Link\n                    href=\"/faq\"\n                    className={`${pathname === \"/faq\" ? \"bg-purple-900 text-white\" : \"text-gray-300 hover:bg-purple-900 hover:text-white\"} px-4 py-2 rounded-lg text-sm transition-colors`}\n                    onClick={() => {\n                      setIsMobileMenuOpen(false);\n                    }}\n                  >\n                    FAQ\n                  </Link>\n                  <Link\n                    href=\"/chat\"\n                    className={`${pathname === \"/chat\" ? \"bg-purple-900 text-white\" : \"text-gray-300 hover:bg-purple-900 hover:text-white\"} px-4 py-2 rounded-lg text-sm transition-colors`}\n                    onClick={() => {\n                      setIsMobileMenuOpen(false);\n                    }}\n                  >\n                    AI Chat\n                  </Link>\n                </div>\n              )}\n              {user && (\n                <Link\n                  href=\"/profile\"\n                  className={`${\n                    pathname === \"/profile\"\n                      ? \"bg-purple-900 text-white\"\n                      : \"text-gray-300 hover:bg-purple-900 hover:text-white\"\n                  } px-4 py-3 rounded-lg flex items-center space-x-3 text-base font-medium transition-colors duration-200`}\n                  onClick={() => {\n                    setIsMobileMenuOpen(false);\n                  }}\n                >\n                  <User size={20} className=\"flex-shrink-0\" />\n                  <span>Profile</span>\n                </Link>\n              )}\n            </nav>\n            <div className=\"mt-6 pt-6 border-t border-purple-900\">\n              {user ? (\n                <div className=\"flex items-center justify-between px-4 py-3 bg-purple-900/50 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 rounded-full bg-purple-500 flex items-center justify-center text-white font-medium\">\n                      {user.email?.charAt(0).toUpperCase()}\n                    </div>\n                    <span className=\"text-sm font-medium text-gray-200 truncate max-w-[150px]\">\n                      {user.email}\n                    </span>\n                  </div>\n                  <button\n                    onClick={() => {\n                      void logout();\n                      setIsMobileMenuOpen(false);\n                    }}\n                    className=\"p-1.5 rounded-full text-gray-400 hover:bg-purple-800 hover:text-white\"\n                  >\n                    <LogOut size={18} />\n                  </button>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  <button\n                    onClick={() => {\n                      setShowLoginModal(true);\n                      setIsMobileMenuOpen(false);\n                    }}\n                    className=\"w-full px-4 py-2.5 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-medium rounded-lg hover:opacity-90 transition-opacity\"\n                  >\n                    Sign In\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      <main className=\"pt-16 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 flex-1 flex flex-col min-h-0\">\n        {children}\n      </main>\n\n      {/* Global Login Modal */}\n      <LoginModal\n        isOpen={showLoginModal}\n        onClose={() => {\n          setShowLoginModal(false);\n        }}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]}]