[{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\src\\react-app\\components\\ProgressChart.tsx","messages":[{"ruleId":"@typescript-eslint/no-unnecessary-condition","severity":2,"message":"Unnecessary conditional, expected left-hand side of `??` operator to be possibly null or undefined.","line":36,"column":32,"nodeType":"MemberExpression","messageId":"neverNullish","endLine":36,"endColumn":52}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n} from \"recharts\";\nimport { format, parseISO } from \"date-fns\";\n\ninterface ProgressData {\n  log_date: string;\n  total_tasks: number;\n  completed_tasks: number;\n  completion_rate: number;\n}\n\ninterface ProgressChartProps {\n  data: ProgressData[];\n  type?: \"line\" | \"bar\";\n  height?: number;\n}\n\nexport default function ProgressChart({\n  data,\n  type = \"line\",\n  height = 300,\n}: ProgressChartProps): React.ReactElement {\n  const formattedData = data.map((item) => ({\n    ...item,\n    date: format(parseISO(item.log_date), \"MMM dd\"),\n    completionRate: Math.round(item.completion_rate ?? 0),\n  }));\n\n  type ChartDatum = ProgressData & { date: string; completionRate: number };\n  interface CustomTooltipProps {\n    active?: boolean;\n    payload?: { payload: ChartDatum }[];\n    label?: string | number;\n  }\n\n  const CustomTooltip = ({ active, payload, label }: CustomTooltipProps): React.ReactElement | null => {\n    const first = payload && payload.length > 0 ? payload[0] : undefined;\n    const datum = first?.payload;\n    if (active && first && datum) {\n      return (\n        <div className=\"bg-white/90 backdrop-blur-sm border border-white/20 rounded-lg p-3 shadow-lg\">\n          <p className=\"text-sm font-medium text-gray-900\">{label}</p>\n          <p className=\"text-sm text-gray-700\">\n            Completed: {datum.completed_tasks}/{datum.total_tasks} tasks\n          </p>\n          <p className=\"text-sm text-gray-700\">Rate: {datum.completionRate}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (type === \"bar\") {\n    return (\n      <div className=\"bg-white/10 backdrop-blur-lg rounded-xl border border-white/20 p-6\">\n        <h3 className=\"text-lg font-semibold text-white mb-4\">\n          Daily Completion Rate\n        </h3>\n        <ResponsiveContainer width=\"100%\" height={height}>\n          <BarChart data={formattedData}>\n            <CartesianGrid\n              strokeDasharray=\"3 3\"\n              stroke=\"rgba(255,255,255,0.1)\"\n            />\n            <XAxis\n              dataKey=\"date\"\n              stroke=\"rgba(255,255,255,0.7)\"\n              fontSize={12}\n            />\n            <YAxis\n              stroke=\"rgba(255,255,255,0.7)\"\n              fontSize={12}\n              domain={[0, 100]}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar\n              dataKey=\"completionRate\"\n              fill=\"url(#colorGradient)\"\n              radius={[4, 4, 0, 0]}\n            />\n            <defs>\n              <linearGradient id=\"colorGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#8b5cf6\" stopOpacity={0.8} />\n                <stop offset=\"95%\" stopColor=\"#3b82f6\" stopOpacity={0.8} />\n              </linearGradient>\n            </defs>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white/10 backdrop-blur-lg rounded-xl border border-white/20 p-6\">\n      <h3 className=\"text-lg font-semibold text-white mb-4\">Progress Trend</h3>\n      <ResponsiveContainer width=\"100%\" height={height}>\n        <LineChart data={formattedData}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\n          <XAxis dataKey=\"date\" stroke=\"rgba(255,255,255,0.7)\" fontSize={12} />\n          <YAxis\n            stroke=\"rgba(255,255,255,0.7)\"\n            fontSize={12}\n            domain={[0, 100]}\n          />\n          <Tooltip content={<CustomTooltip />} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"completionRate\"\n            stroke=\"#8b5cf6\"\n            strokeWidth={3}\n            dot={{ fill: \"#8b5cf6\", strokeWidth: 2, r: 4 }}\n            activeDot={{ r: 6, stroke: \"#8b5cf6\", strokeWidth: 2 }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]}]