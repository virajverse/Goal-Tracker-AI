[{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\analytics\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":4,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":38},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe array destructuring of a tuple element with an `any` value.","line":5,"column":10,"nodeType":"Identifier","messageId":"unsafeArrayPatternFromTuple","endLine":5,"endColumn":17},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":5,"column":42,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":5,"endColumn":45,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[150,153],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[150,153],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-redundant-type-constituents","severity":2,"message":"'any' overrides all other types in this union type.","line":5,"column":42,"nodeType":"TSAnyKeyword","messageId":"overrides","endLine":5,"endColumn":45},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .visitors on an `any` value.","line":32,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":32,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .signups on an `any` value.","line":36,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":36,"endColumn":65},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .conv_rate on an `any` value.","line":41,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":41,"endColumn":36},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"any\" of template literal expression.","line":41,"column":50,"nodeType":"MemberExpression","messageId":"invalidType","endLine":41,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .conv_rate on an `any` value.","line":41,"column":58,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":41,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .active_agents on an `any` value.","line":47,"column":27,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":47,"endColumn":40}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function AnalyticsPage() {\n  const [summary, setSummary] = useState<any | null>(null);\n  useEffect(() => {\n    fetch(\"/api/admin/analytics/summary\", { cache: \"no-store\" })\n      .then((r) => r.json())\n      .then((d) => {\n        setSummary(d);\n      })\n      .catch(() => {\n        setSummary(null);\n      });\n  }, []);\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n          Analytics\n        </h1>\n        <p className=\"text-slate-500\">Traffic and conversions overview.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <p className=\"text-sm font-medium\">Key Metrics</p>\n          <div className=\"mt-3 grid grid-cols-2 gap-3 text-sm\">\n            <div className=\"rounded-xl bg-slate-50 p-3\">\n              <p className=\"text-slate-500\">Visitors</p>\n              <p className=\"text-xl font-bold\">{summary?.visitors ?? \"窶能"}</p>\n            </div>\n            <div className=\"rounded-xl bg-slate-50 p-3\">\n              <p className=\"text-slate-500\">Signups</p>\n              <p className=\"text-xl font-bold\">{summary?.signups ?? \"窶能"}</p>\n            </div>\n            <div className=\"rounded-xl bg-slate-50 p-3\">\n              <p className=\"text-slate-500\">Conversion</p>\n              <p className=\"text-xl font-bold\">\n                {summary?.conv_rate != null ? `${summary.conv_rate}%` : \"窶能"}\n              </p>\n            </div>\n            <div className=\"rounded-xl bg-slate-50 p-3\">\n              <p className=\"text-slate-500\">Active Agents</p>\n              <p className=\"text-xl font-bold\">\n                {summary?.active_agents ?? \"窶能"}\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <p className=\"text-sm font-medium\">Notes</p>\n          <ul className=\"mt-3 list-disc pl-5 text-sm text-slate-700\">\n            <li>Peaks around 9-11am and 6-8pm.</li>\n            <li>Social ads campaign correlates with signups.</li>\n            <li>Mobile accounts for ~68% of traffic.</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\layout.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":4,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":36}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport AdminShell from \"@/react-app/components/admin/AdminShell\";\n\nexport default function AdminLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <AdminShell requireRole=\"admin\">{children}</AdminShell>;\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\migrations\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":10,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":44},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":36,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":36,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<MigrationFile[]>`.","line":37,"column":26,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":37,"endColumn":39},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .files on an `any` value.","line":37,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":37,"endColumn":33},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":37,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":37,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1228,1230],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":38,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":38,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1249,1249],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":49,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":49,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | undefined`.","line":50,"column":34,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":50,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .error on an `any` value.","line":50,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":50,"endColumn":42},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":50,"column":43,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":50,"endColumn":45,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1587,1589],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":52,"column":18,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":52,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .content on an `any` value.","line":52,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":52,"endColumn":27},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":52,"column":28,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":52,"endColumn":30,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1666,1668],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":53,"column":19,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":53,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .content on an `any` value.","line":53,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":53,"endColumn":28},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":53,"column":29,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":53,"endColumn":31,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1702,1704],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-floating-promises","severity":2,"message":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","line":64,"column":5,"nodeType":"ExpressionStatement","messageId":"floatingVoid","endLine":64,"endColumn":16,"suggestions":[{"messageId":"floatingFixVoid","fix":{"range":[1927,1927],"text":"void "},"desc":"Add void operator to ignore."},{"messageId":"floatingFixAwait","fix":{"range":[1927,1927],"text":"await "},"desc":"Add await operator."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":67,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":67,"endColumn":26},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":102,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":102,"endColumn":30},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":112,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":112,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | undefined`.","line":113,"column":34,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":113,"endColumn":62},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .error on an `any` value.","line":113,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":113,"endColumn":42},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":113,"column":43,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":113,"endColumn":45,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3457,3459],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":124,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":124,"endColumn":27},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":137,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":137,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | undefined`.","line":138,"column":34,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":138,"endColumn":64},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .error on an `any` value.","line":138,"column":37,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":138,"endColumn":42},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":138,"column":43,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":138,"endColumn":45,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[4176,4178],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string | null>`.","line":139,"column":19,"nodeType":"MemberExpression","messageId":"unsafeArgument","endLine":139,"endColumn":25},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":139,"column":21,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":139,"endColumn":25},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"any\" of template literal expression.","line":144,"column":29,"nodeType":"MemberExpression","messageId":"invalidType","endLine":144,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .name on an `any` value.","line":144,"column":31,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":144,"endColumn":35},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":152,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":152,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":161,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":161,"endColumn":27},{"ruleId":"@typescript-eslint/no-floating-promises","severity":2,"message":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","line":162,"column":5,"nodeType":"ExpressionStatement","messageId":"floatingVoid","endLine":164,"endColumn":8,"suggestions":[{"messageId":"floatingFixVoid","fix":{"range":[4694,4694],"text":"void "},"desc":"Add void operator to ignore."},{"messageId":"floatingFixAwait","fix":{"range":[4694,4694],"text":"await "},"desc":"Add await operator."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":2,"message":"Promise-returning function provided to attribute where a void return was expected.","line":204,"column":25,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":204,"endColumn":49},{"ruleId":"@typescript-eslint/no-misused-promises","severity":2,"message":"Promise-returning function provided to attribute where a void return was expected.","line":262,"column":27,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":262,"endColumn":38},{"ruleId":"@typescript-eslint/no-misused-promises","severity":2,"message":"Promise-returning function provided to attribute where a void return was expected.","line":313,"column":27,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":313,"endColumn":41}],"suppressedMessages":[],"errorCount":38,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\ninterface MigrationFile {\n  name: string;\n  size: number;\n  mtime: string | null;\n}\n\nexport default function AdminMigrationsPage() {\n  const [files, setFiles] = useState<MigrationFile[]>([]);\n  const [query, setQuery] = useState(\"\");\n  const [selected, setSelected] = useState<string | null>(null);\n  const [content, setContent] = useState(\"\");\n  const [original, setOriginal] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState<string | null>(null);\n\n  const [newMode, setNewMode] = useState(false);\n  const [newTitle, setNewTitle] = useState(\"\");\n\n  const filtered = useMemo(() => {\n    if (!query.trim()) return files;\n    const q = query.toLowerCase();\n    return files.filter((f) => f.name.toLowerCase().includes(q));\n  }, [files, query]);\n\n  const dirty = useMemo(() => content !== original, [content, original]);\n\n  const loadList = useCallback(async () => {\n    try {\n      const r = await fetch(\"/api/admin/migrations/list\", {\n        cache: \"no-store\",\n      });\n      const d = await r.json();\n      if (r.ok) setFiles(d.files || []);\n    } catch {}\n  }, []);\n\n  const loadFile = useCallback(async (name: string) => {\n    setLoading(true);\n    setMessage(null);\n    try {\n      const r = await fetch(\n        `/api/admin/migrations/file?name=${encodeURIComponent(name)}`,\n        { cache: \"no-store\" },\n      );\n      const d = await r.json();\n      if (!r.ok) throw new Error(d?.error || \"Failed to load file\");\n      setSelected(name);\n      setContent(d.content || \"\");\n      setOriginal(d.content || \"\");\n      setNewMode(false);\n      setNewTitle(\"\");\n    } catch (err) {\n      setMessage((err as Error).message || \"Failed to load file\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadList();\n  }, [loadList]);\n\n  function insertTemplate(kind: \"table\" | \"column\" | \"policy\") {\n    const templates: Record<string, string> = {\n      table: [\n        \"-- Example: Create table\",\n        \"BEGIN;\",\n        \"CREATE TABLE IF NOT EXISTS public.example (\",\n        \"  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\",\n        \"  name TEXT NOT NULL,\",\n        \"  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()\",\n        \");\",\n        \"COMMIT;\",\n        \"\",\n      ].join(\"\\n\"),\n      column: [\n        \"-- Example: Add column\",\n        \"BEGIN;\",\n        \"ALTER TABLE public.example ADD COLUMN IF NOT EXISTS description TEXT;\",\n        \"COMMIT;\",\n        \"\",\n      ].join(\"\\n\"),\n      policy: [\n        \"-- Example: Enable RLS and create policy\",\n        \"BEGIN;\",\n        \"ALTER TABLE public.example ENABLE ROW LEVEL SECURITY;\",\n        'CREATE POLICY IF NOT EXISTS \"Users can read own\" ON public.example',\n        \"  FOR SELECT USING (auth.uid() = user_id);\",\n        \"COMMIT;\",\n        \"\",\n      ].join(\"\\n\"),\n    };\n    setContent(\n      (prev) => (prev.endsWith(\"\\n\") ? prev : prev + \"\\n\") + templates[kind],\n    );\n  }\n\n  async function saveExisting() {\n    if (!selected) return;\n    setSaving(true);\n    setMessage(null);\n    try {\n      const r = await fetch(\"/api/admin/migrations/save\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: selected, content }),\n      });\n      const d = await r.json();\n      if (!r.ok) throw new Error(d?.error || \"Failed to save\");\n      setOriginal(content);\n      setMessage(\"Saved successfully\");\n      await loadList();\n    } catch (err) {\n      setMessage((err as Error).message || \"Failed to save\");\n    } finally {\n      setSaving(false);\n    }\n  }\n\n  async function createNew() {\n    if (!content.trim()) {\n      setMessage(\"Content is required\");\n      return;\n    }\n    setSaving(true);\n    setMessage(null);\n    try {\n      const r = await fetch(\"/api/admin/migrations/save\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ title: newTitle || \"migration\", content }),\n      });\n      const d = await r.json();\n      if (!r.ok) throw new Error(d?.error || \"Failed to create\");\n      setSelected(d.name);\n      setOriginal(content);\n      setNewMode(false);\n      setNewTitle(\"\");\n      await loadList();\n      setMessage(`Created ${d.name}`);\n    } catch (err) {\n      setMessage((err as Error).message || \"Failed to create\");\n    } finally {\n      setSaving(false);\n    }\n  }\n\n  function startNew() {\n    setSelected(null);\n    setContent(\"\");\n    setOriginal(\"\");\n    setNewTitle(\"\");\n    setNewMode(true);\n    setMessage(null);\n  }\n\n  function copyToClipboard() {\n    navigator.clipboard.writeText(content).then(() => {\n      setMessage(\"Copied to clipboard\");\n    });\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-3\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n            Migrations\n          </h1>\n          <p className=\"text-slate-500\">\n            View, edit, and create SQL migration files. Copy and apply to\n            Supabase as needed.\n          </p>\n        </div>\n        <button\n          onClick={startNew}\n          className=\"rounded-xl bg-slate-900 px-4 py-2 text-sm font-medium text-white hover:bg-slate-800\"\n        >\n          New Migration\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-3\">\n        {/* List */}\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4 shadow-sm lg:col-span-1\">\n          <div className=\"mb-3\">\n            <input\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n              }}\n              placeholder=\"Search by name\"\n              className=\"w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 text-sm outline-none\"\n            />\n          </div>\n          <div className=\"max-h-[60vh] overflow-auto divide-y\">\n            {filtered.map((f) => (\n              <button\n                key={f.name}\n                onClick={() => loadFile(f.name)}\n                className={`w-full text-left px-3 py-2 text-sm hover:bg-slate-50 ${selected === f.name ? \"bg-slate-100\" : \"\"}`}\n              >\n                <div className=\"flex items-center justify-between gap-3\">\n                  <span className=\"font-medium truncate\">{f.name}</span>\n                  <span className=\"text-xs text-slate-500\">\n                    {(f.size / 1024).toFixed(1)} KB\n                  </span>\n                </div>\n                <div className=\"text-xs text-slate-500\">\n                  {f.mtime ? new Date(f.mtime).toLocaleString() : \"\"}\n                </div>\n              </button>\n            ))}\n            {filtered.length === 0 && (\n              <div className=\"p-3 text-sm text-slate-500\">No files</div>\n            )}\n          </div>\n        </div>\n\n        {/* Editor */}\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4 shadow-sm lg:col-span-2\">\n          {newMode ? (\n            <div className=\"space-y-3\">\n              <div className=\"grid grid-cols-1 gap-3 sm:grid-cols-3\">\n                <label className=\"text-sm sm:col-span-2\">\n                  <span className=\"text-slate-600\">Title</span>\n                  <input\n                    value={newTitle}\n                    onChange={(e) => {\n                      setNewTitle(e.target.value);\n                    }}\n                    placeholder=\"Short title e.g. add_user_profile_table\"\n                    className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n                  />\n                </label>\n                <div className=\"flex items-end gap-2\">\n                  <button\n                    onClick={() => {\n                      insertTemplate(\"table\");\n                    }}\n                    className=\"rounded-xl border border-slate-200 px-3 py-2 text-sm hover:bg-slate-50\"\n                  >\n                    Insert CREATE TABLE\n                  </button>\n                </div>\n              </div>\n              <textarea\n                value={content}\n                onChange={(e) => {\n                  setContent(e.target.value);\n                }}\n                placeholder=\"-- Write SQL here\"\n                className=\"mt-1 h-[50vh] w-full rounded-xl border border-slate-200 bg-transparent p-3 font-mono text-sm outline-none\"\n              />\n              <div className=\"flex items-center gap-2\">\n                <button\n                  disabled={saving}\n                  onClick={createNew}\n                  className=\"rounded-xl bg-slate-900 px-4 py-2 text-sm font-medium text-white hover:bg-slate-800 disabled:opacity-60\"\n                >\n                  {saving ? \"Creating...\" : \"Create\"}\n                </button>\n                <button\n                  onClick={copyToClipboard}\n                  className=\"rounded-xl border border-slate-200 px-3 py-2 text-sm hover:bg-slate-50\"\n                >\n                  Copy SQL\n                </button>\n                {message && (\n                  <span className=\"text-sm text-slate-500\">{message}</span>\n                )}\n              </div>\n            </div>\n          ) : selected ? (\n            <div className=\"space-y-3\">\n              <div className=\"flex flex-wrap items-center justify-between gap-2\">\n                <p className=\"text-sm font-medium\">\n                  Editing: <span className=\"font-semibold\">{selected}</span>\n                </p>\n                <div className=\"flex items-center gap-2\">\n                  <button\n                    onClick={() => {\n                      insertTemplate(\"column\");\n                    }}\n                    className=\"rounded-xl border border-slate-200 px-3 py-2 text-sm hover:bg-slate-50\"\n                  >\n                    Insert ALTER TABLE\n                  </button>\n                  <button\n                    onClick={() => {\n                      insertTemplate(\"policy\");\n                    }}\n                    className=\"rounded-xl border border-slate-200 px-3 py-2 text-sm hover:bg-slate-50\"\n                  >\n                    Insert RLS Policy\n                  </button>\n                </div>\n              </div>\n              <textarea\n                value={content}\n                onChange={(e) => {\n                  setContent(e.target.value);\n                }}\n                className=\"mt-1 h-[50vh] w-full rounded-xl border border-slate-200 bg-transparent p-3 font-mono text-sm outline-none\"\n              />\n              <div className=\"flex items-center gap-2\">\n                <button\n                  disabled={!dirty || saving}\n                  onClick={saveExisting}\n                  className=\"rounded-xl bg-slate-900 px-4 py-2 text-sm font-medium text-white hover:bg-slate-800 disabled:opacity-60\"\n                >\n                  {saving ? \"Saving...\" : dirty ? \"Save Changes\" : \"Saved\"}\n                </button>\n                <button\n                  onClick={copyToClipboard}\n                  className=\"rounded-xl border border-slate-200 px-3 py-2 text-sm hover:bg-slate-50\"\n                >\n                  Copy SQL\n                </button>\n                {loading && (\n                  <span className=\"text-sm text-slate-500\">Loading...</span>\n                )}\n                {message && (\n                  <span className=\"text-sm text-slate-500\">{message}</span>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-sm text-slate-500\">\n              Select a file to edit, or create a new migration.\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React from \"react\";\nimport StatCard from \"@/react-app/components/admin/StatCard\";\nimport { Users, Eye, MessageSquare, Activity } from \"lucide-react\";\n\nexport default function Page() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-2 sm:flex-row sm:items-end sm:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n            Dashboard\n          </h1>\n          <p className=\"text-slate-500\">\n            Overview of traffic, engagement and support.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-4 items-stretch auto-rows-fr\">\n        <StatCard\n          title=\"Visitors\"\n          value={12345}\n          subtitle=\"last 24h\"\n          Icon={Eye}\n          tone=\"indigo\"\n        />\n        <StatCard\n          title=\"Active Users\"\n          value={1234}\n          subtitle=\"currently on site\"\n          Icon={Users}\n          tone=\"emerald\"\n        />\n        <StatCard\n          title=\"Open Tickets\"\n          value={12}\n          subtitle=\"awaiting response\"\n          Icon={MessageSquare}\n          tone=\"amber\"\n        />\n        <StatCard\n          title=\"Avg. Response\"\n          value={\"4m\"}\n          subtitle=\"last hour\"\n          Icon={Activity}\n          tone=\"sky\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-3\">\n        <section className=\"rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm lg:col-span-2\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-sm font-semibold\">Recent Activity</h2>\n          </div>\n          <ul className=\"mt-4 space-y-3 text-sm text-slate-700\">\n            <li className=\"flex items-center justify-between\">\n              <span>New signup: jane@example.com</span>\n              <span className=\"text-xs text-slate-500\">2m ago</span>\n            </li>\n            <li className=\"flex items-center justify-between\">\n              <span>Ticket #1023 assigned to Alex</span>\n              <span className=\"text-xs text-slate-500\">10m ago</span>\n            </li>\n            <li className=\"flex items-center justify-between\">\n              <span>Traffic spike from social campaign</span>\n              <span className=\"text-xs text-slate-500\">35m ago</span>\n            </li>\n          </ul>\n        </section>\n        <section className=\"rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm\">\n          <h2 className=\"text-sm font-semibold\">Support Snapshot</h2>\n          <div className=\"mt-3 space-y-2 text-sm text-slate-700\">\n            <div className=\"flex items-center justify-between\">\n              <span>Open</span>\n              <span className=\"font-semibold\">12</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span>Unassigned</span>\n              <span className=\"font-semibold\">4</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span>Avg. first reply</span>\n              <span className=\"font-semibold\">4m</span>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\projects\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":3,"endColumn":37}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\n\nexport default function ProjectsPage() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n          Projects\n        </h1>\n        <p className=\"text-slate-500\">\n          Stub page. Replace with your project management UI.\n        </p>\n      </div>\n      <div className=\"rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm\">\n        <p className=\"text-sm text-slate-700\">Coming soon.</p>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\settings\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":4,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":37},{"ruleId":"@typescript-eslint/no-unnecessary-condition","severity":2,"message":"Unnecessary conditional, value is always truthy.","line":33,"column":9,"nodeType":"Identifier","messageId":"alwaysTruthy","endLine":33,"endColumn":17},{"ruleId":"@typescript-eslint/no-floating-promises","severity":2,"message":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","line":61,"column":5,"nodeType":"ExpressionStatement","messageId":"floatingVoid","endLine":71,"endColumn":10,"suggestions":[{"messageId":"floatingFixVoid","fix":{"range":[2153,2153],"text":"void "},"desc":"Add void operator to ignore."},{"messageId":"floatingFixAwait","fix":{"range":[2153,2153],"text":"await "},"desc":"Add await operator."}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":64,"column":15,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":64,"endColumn":33},{"ruleId":"@typescript-eslint/no-unnecessary-condition","severity":2,"message":"Unnecessary conditional, value is always truthy.","line":66,"column":24,"nodeType":"TSAsExpression","messageId":"alwaysTruthy","endLine":66,"endColumn":66},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .provider on an `any` value.","line":66,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":66,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":67,"column":27,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":67,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .openai on an `any` value.","line":67,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":67,"endColumn":35},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":67,"column":36,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":67,"endColumn":38,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2428,2430],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":68,"column":27,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":68,"endColumn":41},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .gemini on an `any` value.","line":68,"column":29,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":68,"endColumn":35},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":68,"column":36,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":68,"endColumn":38,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2471,2473],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":15,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":17,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2504,2504],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":74,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":74,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":82,"column":11,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":82,"endColumn":34},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string | null>`.","line":84,"column":14,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":84,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .error on an `any` value.","line":84,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":84,"endColumn":25},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":84,"column":26,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":84,"endColumn":28,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2889,2891],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":91,"column":3,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":91,"endColumn":24},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":104,"column":13,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":104,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `string | undefined`.","line":105,"column":36,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":105,"endColumn":67},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .error on an `any` value.","line":105,"column":42,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":105,"endColumn":47},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":105,"column":48,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":105,"endColumn":50,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3593,3595],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":108,"column":23,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":108,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .openai on an `any` value.","line":108,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":108,"endColumn":34},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":108,"column":35,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":108,"endColumn":37,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3738,3740],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<string>`.","line":109,"column":23,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":109,"endColumn":40},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .gemini on an `any` value.","line":109,"column":28,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":109,"endColumn":34},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":109,"column":35,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":109,"endColumn":37,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3780,3782],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":2,"message":"Promise-returning function provided to attribute where a void return was expected.","line":133,"column":18,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":133,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<\"auto\" | \"openai\" | \"gemini\">`.","line":143,"column":29,"nodeType":"TSAsExpression","messageId":"unsafeArgument","endLine":143,"endColumn":50},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":143,"column":47,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":143,"endColumn":50,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4850,4853],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4850,4853],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-misused-promises","severity":2,"message":"Promise-returning function provided to attribute where a void return was expected.","line":212,"column":18,"nodeType":"JSXExpressionContainer","messageId":"voidReturnAttribute","endLine":212,"endColumn":26},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<\"admin\" | \"agent\" | \"user\">`.","line":233,"column":25,"nodeType":"TSAsExpression","messageId":"unsafeArgument","endLine":233,"endColumn":46},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":233,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":233,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[8643,8646],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[8643,8646],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":35,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useEffect, useMemo, useState } from \"react\";\n\nexport default function SettingsPage() {\n  // Role assign state\n  const [userId, setUserId] = useState(\"\");\n  const [role, setRole] = useState<\"user\" | \"agent\" | \"admin\">(\"agent\");\n  const [msg, setMsg] = useState<string | null>(null);\n\n  // AI settings state\n  const [provider, setProvider] = useState<\"auto\" | \"openai\" | \"gemini\">(\n    \"auto\",\n  );\n  const [openaiApiKey, setOpenaiApiKey] = useState(\"\");\n  const [geminiApiKey, setGeminiApiKey] = useState(\"\");\n  const [openaiMasked, setOpenaiMasked] = useState(\"\");\n  const [geminiMasked, setGeminiMasked] = useState(\"\");\n  const [aiMsg, setAiMsg] = useState<string | null>(null);\n  const [savingAI, setSavingAI] = useState(false);\n\n  // SQL preview\n  const sqlPreview = useMemo(() => {\n    const lines: string[] = [];\n    lines.push(\"-- Ensure admin_settings table exists\");\n    lines.push(\"CREATE TABLE IF NOT EXISTS public.admin_settings (\");\n    lines.push(\"  key TEXT PRIMARY KEY,\");\n    lines.push(\"  value TEXT NOT NULL,\");\n    lines.push(\"  updated_by UUID,\");\n    lines.push(\"  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()\");\n    lines.push(\");\");\n    lines.push(\"ALTER TABLE public.admin_settings ENABLE ROW LEVEL SECURITY;\");\n    const upserts: string[] = [];\n    if (provider) {\n      upserts.push(`('AI_PROVIDER','${provider}')`);\n    }\n    if (openaiApiKey.trim()) {\n      upserts.push(\n        `('OPENAI_API_KEY','${openaiApiKey.trim().replaceAll(\"'\", \"''\")}')`,\n      );\n    }\n    if (geminiApiKey.trim()) {\n      upserts.push(\n        `('GOOGLE_AI_API_KEY','${geminiApiKey.trim().replaceAll(\"'\", \"''\")}')`,\n      );\n    }\n    if (upserts.length) {\n      lines.push(\"\");\n      lines.push(\"-- Apply changes\");\n      lines.push(\"INSERT INTO public.admin_settings (key, value) VALUES\");\n      lines.push(\n        \"  \" +\n          upserts.join(\",\\n  \") +\n          \"\\nON CONFLICT (key) DO UPDATE SET value = EXCLUDED.value, updated_at = NOW();\",\n      );\n    }\n    return lines.join(\"\\n\");\n  }, [provider, openaiApiKey, geminiApiKey]);\n\n  useEffect(() => {\n    // Load current AI settings (masked) on mount\n    (async () => {\n      try {\n        const r = await fetch(\"/api/admin/settings/ai\", { cache: \"no-store\" });\n        const d = await r.json();\n        if (r.ok) {\n          setProvider((d.provider as \"auto\" | \"openai\" | \"gemini\") || \"auto\");\n          setOpenaiMasked(d.openai || \"\");\n          setGeminiMasked(d.gemini || \"\");\n        }\n      } catch {}\n    })();\n  }, []);\n\n  async function submit(e: React.FormEvent) {\n    e.preventDefault();\n    setMsg(null);\n    const res = await fetch(\"/api/admin/users/role\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ user_id: userId, role }),\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      setMsg(data?.error || \"Failed to update\");\n    } else {\n      setMsg(\"Role updated\");\n      setUserId(\"\");\n    }\n  }\n\n  async function saveAI(e: React.FormEvent) {\n    e.preventDefault();\n    setAiMsg(null);\n    setSavingAI(true);\n    try {\n      const payload: Record<string, string> = { provider };\n      if (openaiApiKey.trim()) payload.openaiApiKey = openaiApiKey.trim();\n      if (geminiApiKey.trim()) payload.geminiApiKey = geminiApiKey.trim();\n      const res = await fetch(\"/api/admin/settings/ai\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data?.error || \"Failed to save\");\n      setAiMsg(\"Saved. Backend will now use these keys.\");\n      // Refresh masked state\n      setOpenaiMasked(data.openai || \"\");\n      setGeminiMasked(data.gemini || \"\");\n      // Clear input boxes (so we never echo secrets back)\n      setOpenaiApiKey(\"\");\n      setGeminiApiKey(\"\");\n    } catch (err) {\n      setAiMsg((err as Error).message || \"Failed to save\");\n    } finally {\n      setSavingAI(false);\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n          Settings\n        </h1>\n        <p className=\"text-slate-500\">\n          Admin configuration and access control.\n        </p>\n      </div>\n\n      {/* AI Provider & Keys */}\n      <form\n        onSubmit={saveAI}\n        className=\"space-y-4 rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm\"\n      >\n        <p className=\"text-sm font-medium\">AI Provider & API Keys</p>\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n          <label className=\"text-sm\">\n            <span className=\"text-slate-600\">Provider</span>\n            <select\n              value={provider}\n              onChange={(e) => {\n                setProvider(e.target.value as any);\n              }}\n              className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n            >\n              <option value=\"auto\">Auto</option>\n              <option value=\"openai\">OpenAI</option>\n              <option value=\"gemini\">Gemini</option>\n            </select>\n          </label>\n          <div className=\"text-xs text-slate-500 self-end\">\n            Current: {provider}\n          </div>\n          <label className=\"text-sm sm:col-span-2\">\n            <span className=\"text-slate-600\">OpenAI API Key</span>\n            <input\n              value={openaiApiKey}\n              onChange={(e) => {\n                setOpenaiApiKey(e.target.value);\n              }}\n              placeholder={openaiMasked ? `Current: ${openaiMasked}` : \"sk-...\"}\n              className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n            />\n            <span className=\"mt-1 block text-xs text-slate-500\">\n              We never display full saved secrets. Enter only when updating.\n            </span>\n          </label>\n          <label className=\"text-sm sm:col-span-2\">\n            <span className=\"text-slate-600\">Gemini API Key</span>\n            <input\n              value={geminiApiKey}\n              onChange={(e) => {\n                setGeminiApiKey(e.target.value);\n              }}\n              placeholder={\n                geminiMasked ? `Current: ${geminiMasked}` : \"AIza...\"\n              }\n              className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n            />\n            <span className=\"mt-1 block text-xs text-slate-500\">\n              We never display full saved secrets. Enter only when updating.\n            </span>\n          </label>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <button\n            disabled={savingAI}\n            type=\"submit\"\n            className=\"rounded-xl bg-slate-900 px-4 py-2 text-sm font-medium text-white hover:bg-slate-800 disabled:opacity-60\"\n          >\n            {savingAI ? \"Saving...\" : \"Save\"}\n          </button>\n          {aiMsg && <span className=\"text-sm text-slate-500\">{aiMsg}</span>}\n        </div>\n        <div className=\"rounded-xl bg-slate-50 p-3\">\n          <p className=\"text-xs font-medium text-slate-600\">\n            SQL to run in Supabase (optional)\n          </p>\n          <pre className=\"mt-2 max-h-64 overflow-auto whitespace-pre-wrap rounded-lg bg-white p-3 text-xs text-slate-800 border border-slate-200\">\n            <code>{sqlPreview}</code>\n          </pre>\n          <p className=\"mt-2 text-xs text-slate-500\">\n            Copy and paste into Supabase SQL editor to create/update settings.\n            This includes plaintext keys; handle securely.\n          </p>\n        </div>\n      </form>\n\n      {/* Assign Role */}\n      <form\n        onSubmit={submit}\n        className=\"space-y-4 rounded-2xl border border-slate-200 bg-white p-4 sm:p-5 shadow-sm max-w-xl\"\n      >\n        <p className=\"text-sm font-medium\">Assign Role</p>\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n          <label className=\"text-sm\">\n            <span className=\"text-slate-600\">User ID</span>\n            <input\n              value={userId}\n              onChange={(e) => {\n                setUserId(e.target.value);\n              }}\n              placeholder=\"uuid\"\n              className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n            />\n          </label>\n          <label className=\"text-sm\">\n            <span className=\"text-slate-600\">Role</span>\n            <select\n              value={role}\n              onChange={(e) => {\n                setRole(e.target.value as any);\n              }}\n              className=\"mt-1 w-full rounded-xl border border-slate-200 bg-transparent px-3 py-2 outline-none\"\n            >\n              <option value=\"user\">User</option>\n              <option value=\"agent\">Agent</option>\n              <option value=\"admin\">Admin</option>\n            </select>\n          </label>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <button\n            type=\"submit\"\n            className=\"rounded-xl bg-slate-900 px-4 py-2 text-sm font-medium text-white hover:bg-slate-800\"\n          >\n            Save\n          </button>\n          {msg && <span className=\"text-sm text-slate-500\">{msg}</span>}\n        </div>\n      </form>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\support\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":13,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":13,"endColumn":36},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<Ticket[]>`.","line":22,"column":20,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":22,"endColumn":35},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .tickets on an `any` value.","line":22,"column":22,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":22,"endColumn":29},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":22,"column":30,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":22,"endColumn":32,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[602,604],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useEffect, useMemo, useState } from \"react\";\n\ninterface Ticket {\n  id: string;\n  subject: string;\n  status: \"open\" | \"closed\";\n  customer: string;\n  created_at: string;\n  assigned_to?: string | null;\n}\n\nexport default function SupportPage() {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [query, setQuery] = useState(\"\");\n  const [tab, setTab] = useState<\"all\" | \"open\" | \"closed\">(\"all\");\n\n  useEffect(() => {\n    fetch(\"/api/admin/support/tickets\", { cache: \"no-store\" })\n      .then((r) => r.json())\n      .then((d) => {\n        setTickets(d.tickets || []);\n      })\n      .catch(() => {\n        setTickets([]);\n      });\n  }, []);\n\n  const filtered = useMemo(() => {\n    const q = query.toLowerCase();\n    return tickets.filter((t) => {\n      if (tab !== \"all\" && t.status !== tab) return false;\n      if (!q) return true;\n      return (\n        t.subject.toLowerCase().includes(q) ||\n        t.customer.toLowerCase().includes(q) ||\n        t.id.toLowerCase().includes(q)\n      );\n    });\n  }, [tickets, query, tab]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-3 sm:flex-row sm:items-end sm:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n            Support\n          </h1>\n          <p className=\"text-slate-500\">\n            Manage conversations and customer emails.\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <div className=\"rounded-xl border border-slate-200 px-3 py-2\">\n            <input\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n              }}\n              placeholder=\"Search\"\n              className=\"bg-transparent text-sm outline-none\"\n            />\n          </div>\n          <div className=\"rounded-xl border border-slate-200 p-1 text-sm\">\n            {([\"all\", \"open\", \"closed\"] as const).map((k) => (\n              <button\n                key={k}\n                onClick={() => {\n                  setTab(k);\n                }}\n                className={`rounded-lg px-3 py-1 capitalize ${tab === k ? \"bg-slate-900 text-white\" : \"text-slate-700 hover:bg-slate-100\"}`}\n              >\n                {k}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"rounded-2xl border border-slate-200 bg-white p-2 sm:p-3\">\n        <ul className=\"divide-y divide-slate-100\">\n          {filtered.map((t) => (\n            <li\n              key={t.id}\n              className=\"flex flex-col gap-1 p-3 sm:flex-row sm:items-center sm:justify-between\"\n            >\n              <div className=\"min-w-0\">\n                <p className=\"truncate font-medium text-slate-900\">\n                  {t.subject}\n                </p>\n                <p className=\"truncate text-sm text-slate-500\">\n                  #{t.id} 窶｢ {t.customer}\n                </p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span\n                  className={`rounded-full px-2 py-0.5 text-xs font-medium ${t.status === \"open\" ? \"bg-amber-100 text-amber-800\" : \"bg-emerald-100 text-emerald-800\"}`}\n                >\n                  {t.status}\n                </span>\n                <span className=\"text-xs text-slate-500\">\n                  {new Date(t.created_at).toLocaleString()}\n                </span>\n              </div>\n            </li>\n          ))}\n          {!filtered.length && (\n            <li className=\"p-6 text-center text-sm text-slate-500\">\n              No tickets\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\team\\[id]\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":39,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":39,"endColumn":39},{"ruleId":"@typescript-eslint/no-floating-promises","severity":2,"message":"Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","line":54,"column":5,"nodeType":"ExpressionStatement","messageId":"floatingVoid","endLine":68,"endColumn":10,"suggestions":[{"messageId":"floatingFixVoid","fix":{"range":[1280,1280],"text":"void "},"desc":"Add void operator to ignore."},{"messageId":"floatingFixAwait","fix":{"range":[1280,1280],"text":"await "},"desc":"Add await operator."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<UserDetail | null>`.","line":63,"column":17,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":63,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .user on an `any` value.","line":63,"column":19,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":63,"endColumn":23},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":63,"column":24,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":63,"endColumn":26,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1568,1570],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<ProjectRow[]>`.","line":64,"column":21,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":64,"endColumn":37},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .projects on an `any` value.","line":64,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":64,"endColumn":31},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":64,"column":32,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":64,"endColumn":34,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[1609,1611],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"number\" of template literal expression.","line":94,"column":22,"nodeType":"CallExpression","messageId":"invalidType","endLine":94,"endColumn":37},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":95,"column":34,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":95,"endColumn":36,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2407,2409],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"number\" of template literal expression.","line":102,"column":22,"nodeType":"CallExpression","messageId":"invalidType","endLine":102,"endColumn":38},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":105,"column":61,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":105,"endColumn":63,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2803,2805],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":108,"column":54,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":108,"endColumn":56},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":135,"column":25,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":135,"endColumn":27,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3737,3762],"text":"(user?.name ?? user?.email)"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":135,"column":40,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":135,"endColumn":42,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[3763,3765],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":190,"column":35,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":190,"endColumn":37,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[6061,6063],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Link from \"next/link\";\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n} from \"recharts\";\n\ntype Role = \"user\" | \"agent\" | \"admin\";\ninterface UserDetail {\n  id: string;\n  email: string | null;\n  name?: string;\n  role: Role;\n  created_at?: string;\n  last_sign_in_at?: string | null;\n}\ninterface ProjectRow {\n  id: number;\n  title: string;\n  description: string | null;\n  status: \"upcoming\" | \"ongoing\" | \"completed\" | \"archived\";\n  deadline: string | null;\n  tech_stack: string[];\n  priority: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface PageProps {\n  params: { id: string };\n}\n\nexport default function TeamMemberPage({ params }: PageProps) {\n  // const params = useParams() as { id?: string }; // Remove this line as we're getting params from props\n  const userId = params.id || \"\";\n  const [user, setUser] = useState<UserDetail | null>(null);\n  const [projects, setProjects] = useState<ProjectRow[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!userId) return;\n    setLoading(true);\n    Promise.all([\n      fetch(`/api/admin/users/${userId}`, { cache: \"no-store\" }).then((r) =>\n        r.json(),\n      ),\n      fetch(`/api/admin/users/${userId}/projects`, { cache: \"no-store\" }).then(\n        (r) => r.json(),\n      ),\n    ])\n      .then(([u, p]) => {\n        setUser(u.user || null);\n        setProjects(p.projects || []);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [userId]);\n\n  const statusCounts = useMemo(() => {\n    const counts: Record<string, number> = {\n      upcoming: 0,\n      ongoing: 0,\n      completed: 0,\n      archived: 0,\n    };\n    projects.forEach((pr) => {\n      counts[pr.status] = (counts[pr.status] || 0) + 1;\n    });\n    return counts as {\n      upcoming: number;\n      ongoing: number;\n      completed: number;\n      archived: number;\n    };\n  }, [projects]);\n\n  const monthlySeries = useMemo(() => {\n    // Group by YYYY-MM\n    const map = new Map<string, number>();\n    projects.forEach((pr) => {\n      const d = new Date(pr.created_at);\n      const key = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, \"0\")}`;\n      map.set(key, (map.get(key) || 0) + 1);\n    });\n    // Get last 6 months timeline\n    const now = new Date();\n    const months: string[] = [];\n    for (let i = 5; i >= 0; i--) {\n      const dt = new Date(now.getFullYear(), now.getMonth() - i, 1);\n      const key = `${dt.getFullYear()}-${String(dt.getMonth() + 1).padStart(2, \"0\")}`;\n      months.push(key);\n    }\n    return months.map((m) => ({ month: m, count: map.get(m) || 0 }));\n  }, [projects]);\n\n  const statusBadge = (status: ProjectRow[\"status\"]) => (\n    <span\n      className={`rounded-full px-2 py-0.5 text-xs font-medium ${\n        status === \"completed\"\n          ? \"bg-emerald-100 text-emerald-800\"\n          : status === \"ongoing\"\n            ? \"bg-indigo-100 text-indigo-800\"\n            : status === \"upcoming\"\n              ? \"bg-amber-100 text-amber-800\"\n              : \"bg-slate-100 text-slate-800\"\n      }`}\n    >\n      {status}\n    </span>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-3\">\n        <div className=\"min-w-0\">\n          <div className=\"text-sm text-slate-500\">\n            <Link href=\"/admin/team\" className=\"hover:underline\">\n              Team\n            </Link>{\" \"}\n            / Member\n          </div>\n          <h1 className=\"truncate text-2xl font-bold tracking-tight text-slate-900\">\n            {user?.name || user?.email || \"Member\"}\n          </h1>\n          {user?.email && (\n            <p className=\"truncate text-slate-500\">{user.email}</p>\n          )}\n        </div>\n        {user && (\n          <span\n            className={`rounded-full px-2 py-1 text-xs font-semibold ${user.role === \"admin\" ? \"bg-indigo-100 text-indigo-800\" : user.role === \"agent\" ? \"bg-emerald-100 text-emerald-800\" : \"bg-slate-100 text-slate-800\"}`}\n          >\n            {user.role}\n          </span>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-4\">\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4\">\n          <p className=\"text-xs text-slate-500\">Upcoming</p>\n          <p className=\"text-2xl font-semibold text-slate-900\">\n            {statusCounts.upcoming}\n          </p>\n        </div>\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4\">\n          <p className=\"text-xs text-slate-500\">Ongoing</p>\n          <p className=\"text-2xl font-semibold text-slate-900\">\n            {statusCounts.ongoing}\n          </p>\n        </div>\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4\">\n          <p className=\"text-xs text-slate-500\">Completed</p>\n          <p className=\"text-2xl font-semibold text-slate-900\">\n            {statusCounts.completed}\n          </p>\n        </div>\n        <div className=\"rounded-2xl border border-slate-200 bg-white p-4\">\n          <p className=\"text-xs text-slate-500\">Archived</p>\n          <p className=\"text-2xl font-semibold text-slate-900\">\n            {statusCounts.archived}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"rounded-2xl border border-slate-200 bg-white p-2 sm:p-3\">\n        <h2 className=\"px-1 text-lg font-semibold text-slate-900\">Projects</h2>\n        <ul className=\"divide-y divide-slate-100\">\n          {projects.map((pr) => (\n            <li\n              key={pr.id}\n              className=\"flex flex-col gap-2 p-3 sm:flex-row sm:items-center sm:justify-between\"\n            >\n              <div className=\"min-w-0\">\n                <p className=\"truncate font-medium text-slate-900\">\n                  {pr.title}\n                </p>\n                <p className=\"truncate text-xs text-slate-500\">\n                  {pr.description || \"No description\"}\n                  {pr.deadline\n                    ? ` 窶｢ Due ${new Date(pr.deadline).toLocaleDateString()}`\n                    : \"\"}\n                </p>\n                {pr.tech_stack.length ? (\n                  <p className=\"truncate text-xs text-slate-400\">\n                    {pr.tech_stack.join(\", \")}\n                  </p>\n                ) : null}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {statusBadge(pr.status)}\n                <span className=\"text-xs text-slate-500\">\n                  {new Date(pr.created_at).toLocaleDateString()}\n                </span>\n              </div>\n            </li>\n          ))}\n          {!projects.length && !loading && (\n            <li className=\"p-6 text-center text-sm text-slate-500\">\n              No projects yet\n            </li>\n          )}\n          {loading && (\n            <li className=\"p-6 text-center text-sm text-slate-500\">\n              Loading...\n            </li>\n          )}\n        </ul>\n      </div>\n\n      <div className=\"rounded-2xl border border-slate-200 bg-white p-2 sm:p-3\">\n        <h2 className=\"px-1 text-lg font-semibold text-slate-900\">\n          Projects per month\n        </h2>\n        <div className=\"h-64 w-full\">\n          {mounted && (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={monthlySeries}\n                margin={{ top: 10, right: 20, bottom: 0, left: 0 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" tick={{ fontSize: 12 }} />\n                <YAxis allowDecimals={false} tick={{ fontSize: 12 }} />\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"count\"\n                  stroke=\"#6366f1\"\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          )}\n          {!mounted && (\n            <div className=\"flex h-full items-center justify-center text-sm text-slate-500\">\n              Loading chart...\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"D:\\Taliyo Tech\\sample\\sample 7 august\\GoalTracker AI\\app\\admin\\team\\page.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":14,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":14,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-argument","severity":2,"message":"Unsafe argument of type `any` assigned to a parameter of type `SetStateAction<UserRow[]>`.","line":22,"column":18,"nodeType":"LogicalExpression","messageId":"unsafeArgument","endLine":22,"endColumn":31},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .users on an `any` value.","line":22,"column":20,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":22,"endColumn":25},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":22,"column":26,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":22,"endColumn":28,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[539,541],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":34,"column":18,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":34,"endColumn":20,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[767,769],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":35,"column":17,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":35,"endColumn":19,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[819,821],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":74,"column":27,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":74,"endColumn":29,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2156,2173],"text":"(u.name ?? u.email)"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":74,"column":38,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":74,"endColumn":40,"suggestions":[{"messageId":"suggestNullish","data":{"equals":""},"fix":{"range":[2174,2176],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Link from \"next/link\";\n\ntype Role = \"user\" | \"agent\" | \"admin\";\ninterface UserRow {\n  id: string;\n  email: string | null;\n  name?: string;\n  role: Role;\n  created_at?: string;\n}\n\nexport default function TeamPage() {\n  const [users, setUsers] = useState<UserRow[]>([]);\n  const [q, setQ] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/admin/users/list\", { cache: \"no-store\" })\n      .then((r) => r.json())\n      .then((d) => {\n        setUsers(d.users || []);\n      })\n      .catch(() => {\n        setUsers([]);\n      });\n  }, []);\n\n  const filtered = useMemo(() => {\n    const s = q.toLowerCase();\n    if (!s) return users;\n    return users.filter(\n      (u) =>\n        (u.email || \"\").toLowerCase().includes(s) ||\n        (u.name || \"\").toLowerCase().includes(s),\n    );\n  }, [users, q]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col gap-3 sm:flex-row sm:items-end sm:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight text-slate-900\">\n            Team\n          </h1>\n          <p className=\"text-slate-500\">\n            All users with roles. Click to view projects.\n          </p>\n        </div>\n        <div className=\"rounded-xl border border-slate-200 px-3 py-2\">\n          <input\n            value={q}\n            onChange={(e) => {\n              setQ(e.target.value);\n            }}\n            placeholder=\"Search by email or name\"\n            className=\"bg-transparent text-sm outline-none\"\n          />\n        </div>\n      </div>\n\n      <div className=\"rounded-2xl border border-slate-200 bg-white p-2 sm:p-3\">\n        <ul className=\"divide-y divide-slate-100\">\n          {filtered.map((u) => (\n            <li\n              key={u.id}\n              className=\"flex flex-col gap-1 p-3 sm:flex-row sm:items-center sm:justify-between\"\n            >\n              <div className=\"min-w-0\">\n                <Link\n                  href={`/admin/team/${u.id}`}\n                  className=\"font-medium text-slate-900 hover:underline truncate block\"\n                >\n                  {u.name || u.email || u.id}\n                </Link>\n                <p className=\"truncate text-xs text-slate-500\">{u.email}</p>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span\n                  className={`rounded-full px-2 py-0.5 text-xs font-medium ${u.role === \"admin\" ? \"bg-indigo-100 text-indigo-800\" : u.role === \"agent\" ? \"bg-emerald-100 text-emerald-800\" : \"bg-slate-100 text-slate-800\"}`}\n                >\n                  {u.role}\n                </span>\n                {u.created_at && (\n                  <span className=\"text-xs text-slate-500\">\n                    {new Date(u.created_at).toLocaleDateString()}\n                  </span>\n                )}\n              </div>\n            </li>\n          ))}\n          {!filtered.length && (\n            <li className=\"p-6 text-center text-sm text-slate-500\">\n              No users found\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]}]